// generated by Fast Light User Interface Designer (fluid) version 1.0300

#include "fltkgui.h"

Resize_Window::Resize_Window(int W, int H, const char *l ): Fl_Double_Window(W,H,l) {
}

Resize_Window::Resize_Window(int X, int Y, int W, int H, const char *l ): Fl_Double_Window(X,Y,W,H,l) {
}

void Resize_Window::resize(int X,int Y,int W,int H) {
  //save the old width and height
  int width = w();
  int height = h();
  
  //do the normal resize
  Fl_Double_Window::resize(X, Y, W, H);
  
  //check if it ws changed
  if(W != width || H != height)
     cb_resize(this);
}

Resize_Window *wnd_main=(Resize_Window *)0;

Fl_Group *grp_Sidebar=(Fl_Group *)0;

Fl_Input *ipt_style=(Fl_Input *)0;

Fl_Input *ipt_material=(Fl_Input *)0;

Fl_Input *ipt_design=(Fl_Input *)0;

Fl_Input *ipt_glass_style=(Fl_Input *)0;

Fl_Browser *bsr_MostUsed=(Fl_Browser *)0;

Fl_Button *btn_settings=(Fl_Button *)0;

Fl_Group *grp_DoorGrid=(Fl_Group *)0;

Fl_Scroll *scroll_DoorGrid=(Fl_Scroll *)0;

int main(int argc, char **argv) {
  Fl::scheme("gtk+");
  Fl::option(Fl::OPTION_ARROW_FOCUS, true);
  { wnd_main = new Resize_Window(780, 547, "Door Manager");
    wnd_main->box(FL_FLAT_BOX);
    wnd_main->color((Fl_Color)55);
    wnd_main->selection_color(FL_BACKGROUND_COLOR);
    wnd_main->labeltype(FL_NO_LABEL);
    wnd_main->labelfont(0);
    wnd_main->labelsize(14);
    wnd_main->labelcolor(FL_FOREGROUND_COLOR);
    wnd_main->align(Fl_Align(FL_ALIGN_CLIP|FL_ALIGN_INSIDE));
    wnd_main->when(FL_WHEN_RELEASE);
    { grp_Sidebar = new Fl_Group(0, 0, 260, 547);
      grp_Sidebar->box(FL_FLAT_BOX);
      grp_Sidebar->color((Fl_Color)23);
      grp_Sidebar->selection_color((Fl_Color)55);
      { ipt_style = new Fl_Input(105, 30, 130, 30, "Style:");
        ipt_style->box(FL_GTK_DOWN_BOX);
        ipt_style->callback((Fl_Callback*)cb_SearchTextChanged);
        ipt_style->when(FL_WHEN_CHANGED);
      } // Fl_Input* ipt_style
      { ipt_material = new Fl_Input(105, 75, 130, 30, "Material:");
        ipt_material->box(FL_GTK_DOWN_BOX);
        ipt_material->callback((Fl_Callback*)cb_SearchTextChanged);
        ipt_material->when(FL_WHEN_CHANGED);
      } // Fl_Input* ipt_material
      { ipt_design = new Fl_Input(105, 120, 130, 30, "Design:");
        ipt_design->box(FL_GTK_DOWN_BOX);
        ipt_design->callback((Fl_Callback*)cb_SearchTextChanged);
        ipt_design->when(FL_WHEN_CHANGED);
      } // Fl_Input* ipt_design
      { ipt_glass_style = new Fl_Input(105, 165, 130, 30, "Glass Style:");
        ipt_glass_style->box(FL_GTK_DOWN_BOX);
        ipt_glass_style->callback((Fl_Callback*)cb_SearchTextChanged);
        ipt_glass_style->when(FL_WHEN_CHANGED);
      } // Fl_Input* ipt_glass_style
      { bsr_MostUsed = new Fl_Browser(25, 235, 210, 245);
        bsr_MostUsed->type(1);
        bsr_MostUsed->box(FL_GTK_THIN_DOWN_BOX);
        bsr_MostUsed->color((Fl_Color)55);
        bsr_MostUsed->callback((Fl_Callback*)cb_MostUsedItemSelected);
        bsr_MostUsed->deactivate();
        Fl_Group::current()->resizable(bsr_MostUsed);
      } // Fl_Browser* bsr_MostUsed
      { btn_settings = new Fl_Button(25, 498, 210, 27, "Settings");
        btn_settings->callback((Fl_Callback*)cb_btn_settings);
      } // Fl_Button* btn_settings
      grp_Sidebar->end();
    } // Fl_Group* grp_Sidebar
    { grp_DoorGrid = new Fl_Group(260, 0, 520, 550);
      { scroll_DoorGrid = new Fl_Scroll(260, 0, 520, 550);
        scroll_DoorGrid->color(FL_BACKGROUND2_COLOR);
        scroll_DoorGrid->when(FL_WHEN_NEVER);
        scroll_DoorGrid->end();
        Fl_Group::current()->resizable(scroll_DoorGrid);
      } // Fl_Scroll* scroll_DoorGrid
      grp_DoorGrid->end();
      Fl_Group::current()->resizable(grp_DoorGrid);
    } // Fl_Group* grp_DoorGrid
    wnd_main->db.setName("Data\\doors.db");
    wnd_main->db.open();
    wnd_main->size_range(522, 277);
    wnd_main->end();
  } // Resize_Window* wnd_main
  cb_resize(wnd_main);
  wnd_main->show(argc, argv);
  return Fl::run();
}

Fl_Box *boxDoorImage=(Fl_Box *)0;

Fl_Output *opt_DoorStyle=(Fl_Output *)0;

Fl_Output *opt_DoorMaterial=(Fl_Output *)0;

Fl_Output *opt_GlassStyle=(Fl_Output *)0;

Fl_Output *opt_DoorDesign=(Fl_Output *)0;

Fl_Value_Output *opt_DoorCost=(Fl_Value_Output *)0;

Door_Size_Chooser *lst_DoorSize=(Door_Size_Chooser *)0;

Fl_Choice *lst_DoorSwing=(Fl_Choice *)0;

Fl_Choice *lst_Sill=(Fl_Choice *)0;

Fl_Choice *lst_HingeColor=(Fl_Choice *)0;

Fl_Input *txt_LocationName=(Fl_Input *)0;

Fl_Input *txt_Customer=(Fl_Input *)0;

Fl_Input *txt_Job=(Fl_Input *)0;

Fl_Input *txt_Date=(Fl_Input *)0;

Fl_Choice *lst_JambMaterial=(Fl_Choice *)0;

Fl_Choice *lst_JambSize=(Fl_Choice *)0;

Fl_Input *txt_CustomRipSize=(Fl_Input *)0;

Fl_Input *txt_Notes=(Fl_Input *)0;

Fl_Check_Button *chk_NoBrickmold=(Fl_Check_Button *)0;

Fl_Check_Button *chk_DeadBolt=(Fl_Check_Button *)0;

Fl_Check_Button *chk_DentilShelf=(Fl_Check_Button *)0;

Fl_Check_Button *chk_OutswingSill=(Fl_Check_Button *)0;

Fl_Check_Button *chk_ADASill=(Fl_Check_Button *)0;

Fl_Check_Button *chk_SpringHinge=(Fl_Check_Button *)0;

Fl_Value_Output *opt_Cost=(Fl_Value_Output *)0;

Fl_Value_Input *val_Markup=(Fl_Value_Input *)0;

Fl_Value_Input *val_LaborCost=(Fl_Value_Input *)0;

Fl_Value_Input *val_Taxes=(Fl_Value_Input *)0;

Fl_Value_Input *val_Total=(Fl_Value_Input *)0;

Fl_Double_Window* make_door_info_dialog() {
  Fl_Double_Window* w;
  { Fl_Double_Window* o = new Fl_Double_Window(808, 624, "Door Information");
    w = o;
    o->color((Fl_Color)55);
    o->align(Fl_Align(FL_ALIGN_CLIP|FL_ALIGN_INSIDE));
    { boxDoorImage = new Fl_Box(25, 28, 130, 251);
      boxDoorImage->box(FL_THIN_UP_FRAME);
    } // Fl_Box* boxDoorImage
    { opt_DoorStyle = new Fl_Output(25, 305, 130, 27, "Door Style/#:");
      opt_DoorStyle->color(FL_LIGHT3);
      opt_DoorStyle->align(Fl_Align(FL_ALIGN_TOP_LEFT));
    } // Fl_Output* opt_DoorStyle
    { opt_DoorMaterial = new Fl_Output(25, 354, 130, 27, "Door Material:");
      opt_DoorMaterial->color(FL_LIGHT3);
      opt_DoorMaterial->align(Fl_Align(FL_ALIGN_TOP_LEFT));
    } // Fl_Output* opt_DoorMaterial
    { opt_GlassStyle = new Fl_Output(25, 403, 130, 27, "Glass Style/#:");
      opt_GlassStyle->color(FL_LIGHT3);
      opt_GlassStyle->align(Fl_Align(FL_ALIGN_TOP_LEFT));
    } // Fl_Output* opt_GlassStyle
    { opt_DoorDesign = new Fl_Output(25, 452, 130, 27, "Door Design:");
      opt_DoorDesign->color(FL_LIGHT3);
      opt_DoorDesign->align(Fl_Align(FL_ALIGN_TOP_LEFT));
    } // Fl_Output* opt_DoorDesign
    { opt_DoorCost = new Fl_Value_Output(25, 502, 130, 27, "Door Cost:");
      opt_DoorCost->color((Fl_Color)55);
      opt_DoorCost->align(Fl_Align(FL_ALIGN_TOP_LEFT));
    } // Fl_Value_Output* opt_DoorCost
    { Fl_Group* o = new Fl_Group(170, 26, 341, 186, "Door");
      o->box(FL_RFLAT_BOX);
      o->color((Fl_Color)23);
      o->align(Fl_Align(FL_ALIGN_TOP_LEFT));
      { lst_DoorSize = new Door_Size_Chooser(274, 41, 221, 27, "Door Size:");
        lst_DoorSize->box(FL_FLAT_BOX);
        lst_DoorSize->down_box(FL_BORDER_BOX);
        lst_DoorSize->color((Fl_Color)55);
        lst_DoorSize->selection_color(FL_SELECTION_COLOR);
        lst_DoorSize->labeltype(FL_NORMAL_LABEL);
        lst_DoorSize->labelfont(0);
        lst_DoorSize->labelsize(14);
        lst_DoorSize->labelcolor(FL_FOREGROUND_COLOR);
        lst_DoorSize->callback((Fl_Callback*)cb_update);
        lst_DoorSize->align(Fl_Align(FL_ALIGN_LEFT));
        lst_DoorSize->when(FL_WHEN_CHANGED);
      } // Door_Size_Chooser* lst_DoorSize
      { lst_DoorSwing = new Fl_Choice(274, 83, 221, 27, "Door Swing:");
        lst_DoorSwing->down_box(FL_BORDER_BOX);
        lst_DoorSwing->color((Fl_Color)55);
        lst_DoorSwing->callback((Fl_Callback*)cb_update);
      } // Fl_Choice* lst_DoorSwing
      { lst_Sill = new Fl_Choice(274, 125, 221, 27, "Sill:");
        lst_Sill->down_box(FL_BORDER_BOX);
        lst_Sill->color((Fl_Color)55);
        lst_Sill->callback((Fl_Callback*)cb_update);
      } // Fl_Choice* lst_Sill
      { lst_HingeColor = new Fl_Choice(274, 167, 221, 27, "Hinge Color:");
        lst_HingeColor->down_box(FL_BORDER_BOX);
        lst_HingeColor->color((Fl_Color)55);
        lst_HingeColor->callback((Fl_Callback*)cb_update);
      } // Fl_Choice* lst_HingeColor
      o->end();
    } // Fl_Group* o
    { Fl_Group* o = new Fl_Group(521, 26, 271, 186, "Customer Details");
      o->box(FL_RFLAT_BOX);
      o->color((Fl_Color)23);
      o->align(Fl_Align(FL_ALIGN_TOP_LEFT));
      { txt_LocationName = new Fl_Input(630, 41, 146, 27, "Door Location:");
      } // Fl_Input* txt_LocationName
      { txt_Customer = new Fl_Input(630, 83, 146, 27, "Customer:");
      } // Fl_Input* txt_Customer
      { txt_Job = new Fl_Input(630, 125, 146, 27, "Job:");
      } // Fl_Input* txt_Job
      { txt_Date = new Fl_Input(630, 167, 146, 27, "Date:");
      } // Fl_Input* txt_Date
      o->end();
    } // Fl_Group* o
    { Fl_Group* o = new Fl_Group(170, 240, 622, 101, "Jamb");
      o->box(FL_RFLAT_BOX);
      o->color((Fl_Color)23);
      o->align(Fl_Align(FL_ALIGN_TOP_LEFT));
      { lst_JambMaterial = new Fl_Choice(274, 257, 220, 27, "Jamb Material:");
        lst_JambMaterial->down_box(FL_BORDER_BOX);
        lst_JambMaterial->color((Fl_Color)55);
      } // Fl_Choice* lst_JambMaterial
      { lst_JambSize = new Fl_Choice(274, 294, 220, 27, "Jamb Size:");
        lst_JambSize->down_box(FL_BORDER_BOX);
        lst_JambSize->color((Fl_Color)55);
      } // Fl_Choice* lst_JambSize
      { txt_CustomRipSize = new Fl_Input(594, 294, 140, 27, "Rip Jambs to:");
        txt_CustomRipSize->color((Fl_Color)55);
        txt_CustomRipSize->hide();
      } // Fl_Input* txt_CustomRipSize
      o->end();
    } // Fl_Group* o
    { txt_Notes = new Fl_Input(170, 377, 230, 172, "Notes:");
      txt_Notes->type(4);
      txt_Notes->align(Fl_Align(FL_ALIGN_TOP_LEFT));
    } // Fl_Input* txt_Notes
    { Fl_Group* o = new Fl_Group(421, 377, 120, 172, "Other Options");
      o->box(FL_RFLAT_BOX);
      o->color((Fl_Color)23);
      o->align(Fl_Align(FL_ALIGN_TOP_LEFT));
      { chk_NoBrickmold = new Fl_Check_Button(428, 385, 106, 25, "No Brickmold");
        chk_NoBrickmold->down_box(FL_DOWN_BOX);
        chk_NoBrickmold->callback((Fl_Callback*)cb_update);
      } // Fl_Check_Button* chk_NoBrickmold
      { chk_DeadBolt = new Fl_Check_Button(428, 411, 106, 25, "Dead Bolt");
        chk_DeadBolt->down_box(FL_DOWN_BOX);
        chk_DeadBolt->callback((Fl_Callback*)cb_update);
      } // Fl_Check_Button* chk_DeadBolt
      { chk_DentilShelf = new Fl_Check_Button(428, 437, 106, 25, "Dentil Shelf");
        chk_DentilShelf->down_box(FL_DOWN_BOX);
        chk_DentilShelf->callback((Fl_Callback*)cb_update);
      } // Fl_Check_Button* chk_DentilShelf
      { chk_OutswingSill = new Fl_Check_Button(428, 463, 106, 24, "Outswing Sill");
        chk_OutswingSill->down_box(FL_DOWN_BOX);
        chk_OutswingSill->callback((Fl_Callback*)cb_update);
      } // Fl_Check_Button* chk_OutswingSill
      { chk_ADASill = new Fl_Check_Button(428, 489, 106, 25, "ADA Sill");
        chk_ADASill->down_box(FL_DOWN_BOX);
        chk_ADASill->callback((Fl_Callback*)cb_update);
      } // Fl_Check_Button* chk_ADASill
      { chk_SpringHinge = new Fl_Check_Button(428, 515, 106, 25, "Spring Hinge");
        chk_SpringHinge->down_box(FL_DOWN_BOX);
        chk_SpringHinge->callback((Fl_Callback*)cb_update);
      } // Fl_Check_Button* chk_SpringHinge
      o->end();
    } // Fl_Group* o
    { Fl_Group* o = new Fl_Group(561, 377, 231, 172, "Price");
      o->box(FL_RFLAT_BOX);
      o->color((Fl_Color)23);
      o->align(Fl_Align(FL_ALIGN_TOP_LEFT));
      { opt_Cost = new Fl_Value_Output(693, 386, 73, 26);
        opt_Cost->color((Fl_Color)55);
        opt_Cost->deactivate();
      } // Fl_Value_Output* opt_Cost
      { val_Markup = new Fl_Value_Input(693, 417, 73, 27, "Percent Markup:");
        val_Markup->callback((Fl_Callback*)cb_update);
      } // Fl_Value_Input* val_Markup
      { val_LaborCost = new Fl_Value_Input(693, 450, 73, 27, "Labor Cost:");
        val_LaborCost->callback((Fl_Callback*)cb_update);
      } // Fl_Value_Input* val_LaborCost
      { val_Taxes = new Fl_Value_Input(693, 483, 73, 27, "Taxes Percent:");
        val_Taxes->callback((Fl_Callback*)cb_update);
      } // Fl_Value_Input* val_Taxes
      { val_Total = new Fl_Value_Input(693, 515, 73, 26, "Total:");
      } // Fl_Value_Input* val_Total
      { Fl_Box* o = new Fl_Box(654, 386, 40, 26, "Cost:");
        o->align(Fl_Align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE));
      } // Fl_Box* o
      o->end();
    } // Fl_Group* o
    { Fl_Group* o = new Fl_Group(0, 567, 810, 57);
      o->box(FL_FLAT_BOX);
      o->color((Fl_Color)23);
      { Fl_Button* o = new Fl_Button(560, 582, 100, 27, "Print");
        o->down_box(FL_DOWN_BOX);
        o->callback((Fl_Callback*)cb_PrintClicked);
        o->align(Fl_Align(288));
      } // Fl_Button* o
      { Fl_Button* o = new Fl_Button(670, 582, 100, 27, "Cancel");
        o->down_box(FL_DOWN_BOX);
        o->callback((Fl_Callback*)cb_CancelClicked);
      } // Fl_Button* o
      o->end();
    } // Fl_Group* o
    o->end();
  } // Fl_Double_Window* o
  return w;
}

Fl_Group *grp_PrintGroup=(Fl_Group *)0;

Fl_Box *opt_Customer=(Fl_Box *)0;

Fl_Box *opt_Job=(Fl_Box *)0;

Fl_Box *opt_Date=(Fl_Box *)0;

Fl_Box *box_Print_DoorImage=(Fl_Box *)0;

Fl_Box *opt_Print_LocationName=(Fl_Box *)0;

Fl_Box *opt_Print_DoorSize=(Fl_Box *)0;

Fl_Box *opt_Print_DoorMaterial=(Fl_Box *)0;

Fl_Box *opt_Print_DoorStyle=(Fl_Box *)0;

Fl_Box *opt_Print_DoorSwing=(Fl_Box *)0;

Fl_Box *opt_Print_DoorDesign=(Fl_Box *)0;

Fl_Box *opt_Print_JambSize=(Fl_Box *)0;

Fl_Box *opt_Print_JambMaterial=(Fl_Box *)0;

Fl_Box *opt_Print_Sill=(Fl_Box *)0;

Fl_Box *opt_Print_GlassStyle=(Fl_Box *)0;

Fl_Box *opt_Print_HingeColor=(Fl_Box *)0;

Fl_Box *opt_Print_Price=(Fl_Box *)0;

Fl_Box *opt_Print_Notes=(Fl_Box *)0;

Fl_Box *opt_CompanyInfo=(Fl_Box *)0;

#include <FL/Fl_JPEG_Image.H>
static unsigned char idata_HOG[] =
{255,216,255,224,0,16,74,70,73,70,0,1,1,1,0,96,0,96,0,0,255,225,0,90,69,120,
105,102,0,0,77,77,0,42,0,0,0,8,0,5,3,1,0,5,0,0,0,1,0,0,0,74,3,3,0,1,0,0,0,1,0,0,
0,0,81,16,0,1,0,0,0,1,1,0,0,0,81,17,0,4,0,0,0,1,0,0,0,0,81,18,0,4,0,0,0,1,0,0,
0,0,0,0,0,0,0,1,134,160,0,0,177,143,255,219,0,67,0,8,6,6,7,6,5,8,7,7,7,9,9,8,
10,12,20,13,12,11,11,12,25,18,19,15,20,29,26,31,30,29,26,28,28,32,36,46,39,32,
34,44,35,28,28,40,55,41,44,48,49,52,52,52,31,39,57,61,56,50,60,46,51,52,50,255,
219,0,67,1,9,9,9,12,11,12,24,13,13,24,50,33,28,33,50,50,50,50,50,50,50,50,50,50,
50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,
50,50,50,50,50,50,50,50,50,50,50,50,50,50,255,192,0,17,8,0,74,0,100,3,1,34,0,2,
17,1,3,17,1,255,196,0,31,0,0,1,5,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,
10,11,255,196,0,181,16,0,2,1,3,3,2,4,3,5,5,4,4,0,0,1,125,1,2,3,0,4,17,5,18,33,
49,65,6,19,81,97,7,34,113,20,50,129,145,161,8,35,66,177,193,21,82,209,240,36,
51,98,114,130,9,10,22,23,24,25,26,37,38,39,40,41,42,52,53,54,55,56,57,58,67,68,
69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,
116,117,118,119,120,121,122,131,132,133,134,135,136,137,138,146,147,148,149,150,
151,152,153,154,162,163,164,165,166,167,168,169,170,178,179,180,181,182,183,184,
185,186,194,195,196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,
225,226,227,228,229,230,231,232,233,234,241,242,243,244,245,246,247,248,249,250,
255,196,0,31,1,0,3,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,255,
196,0,181,17,0,2,1,2,4,4,3,4,7,5,4,4,0,1,2,119,0,1,2,3,17,4,5,33,49,6,18,65,81,
7,97,113,19,34,50,129,8,20,66,145,161,177,193,9,35,51,82,240,21,98,114,209,10,
22,36,52,225,37,241,23,24,25,26,38,39,40,41,42,53,54,55,56,57,58,67,68,69,70,
71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,
118,119,120,121,122,130,131,132,133,134,135,136,137,138,146,147,148,149,150,151,
152,153,154,162,163,164,165,166,167,168,169,170,178,179,180,181,182,183,184,185,
186,194,195,196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,226,
227,228,229,230,231,232,233,234,242,243,244,245,246,247,248,249,250,255,218,0,
12,3,1,0,2,17,3,17,0,63,0,247,250,40,162,128,10,40,162,128,10,40,175,51,241,
247,197,221,59,194,254,110,159,165,236,191,213,135,5,65,204,112,31,246,200,234,
127,217,31,142,42,233,211,149,73,114,197,9,187,29,135,137,188,85,164,120,75,77,
55,186,181,210,196,167,136,227,28,188,167,209,87,191,242,245,174,91,194,63,24,
180,15,19,220,253,142,224,54,151,120,204,68,81,220,56,219,32,237,135,233,159,99,
248,102,190,124,115,226,79,30,235,175,54,203,189,86,254,78,187,23,33,7,167,247,
81,127,33,73,226,63,7,235,190,21,145,19,88,211,222,4,144,13,146,130,30,54,62,
155,135,25,246,175,78,56,26,73,114,206,94,241,60,204,251,34,150,190,93,240,87,
197,221,111,194,254,93,165,241,109,79,76,94,60,185,27,247,145,143,246,24,255,0,
35,199,210,190,132,240,207,140,52,95,22,217,125,167,73,188,89,8,31,188,133,190,
89,35,62,140,189,71,215,165,112,215,194,212,163,190,221,202,77,51,122,138,40,
174,113,133,20,81,64,5,20,81,64,5,84,212,53,27,61,42,202,91,219,251,152,173,173,
162,27,158,73,27,0,10,178,251,194,54,192,11,227,128,78,6,107,153,184,240,101,
166,177,124,151,190,34,149,181,55,140,230,27,103,249,109,161,62,209,255,0,17,
247,108,159,165,56,219,168,30,115,174,248,211,197,159,16,229,147,75,240,54,159,
115,6,150,73,73,117,23,30,95,152,59,225,143,221,31,76,177,246,233,86,188,51,240,
23,78,180,217,113,226,59,199,190,155,169,183,132,148,139,62,231,239,55,233,94,
193,20,81,193,18,197,12,107,28,106,48,170,131,0,15,97,89,190,34,241,14,159,225,
125,26,109,87,83,148,199,111,22,6,20,101,157,143,69,81,220,154,232,88,137,37,
201,73,91,243,21,187,150,116,237,46,195,72,180,91,93,58,206,11,91,117,233,28,40,
20,126,157,106,75,203,43,93,70,210,75,91,219,120,174,45,228,27,94,57,84,50,176,
247,6,190,117,241,247,196,207,23,157,81,162,180,191,91,45,50,100,243,108,228,
178,255,0,150,241,30,141,188,140,231,177,3,24,32,138,131,87,241,231,140,116,223,
23,197,111,165,234,183,83,60,144,90,132,182,112,37,89,29,161,66,70,211,220,146,
122,122,214,171,5,86,86,149,245,220,92,200,233,188,105,240,43,253,101,247,132,
228,199,86,54,19,55,31,240,7,63,201,191,58,241,228,125,91,195,58,206,229,55,90,
110,165,110,222,241,186,31,127,81,250,26,250,139,193,254,60,178,241,5,220,186,
53,204,208,13,114,210,48,110,82,3,152,153,191,136,70,199,239,109,60,31,126,153,
28,214,151,138,60,23,161,248,190,207,200,213,109,21,228,81,136,238,19,229,150,
63,247,91,250,30,43,74,120,201,211,247,43,43,161,56,246,60,207,193,95,28,226,
155,203,177,241,90,44,50,112,22,254,37,249,15,251,234,62,239,212,113,236,43,217,
237,174,96,188,183,142,226,218,104,230,134,65,185,36,141,131,43,15,80,71,90,249,
135,198,159,8,245,207,10,249,151,118,138,218,158,152,188,249,209,47,239,35,31,
237,160,254,99,143,165,97,248,75,199,154,239,131,174,3,105,183,59,237,88,230,75,
73,73,104,159,240,254,19,238,42,234,97,41,214,92,244,31,200,20,154,220,251,2,
138,231,188,27,226,136,188,93,225,139,93,102,59,103,183,19,22,86,137,142,237,
172,172,84,242,58,140,138,43,203,148,101,23,102,85,206,134,138,40,164,49,9,3,
169,2,141,195,25,200,199,214,188,27,246,143,214,153,35,208,244,88,29,132,140,
207,114,225,79,63,221,95,230,223,149,113,62,62,241,13,192,240,159,134,60,37,30,
143,170,105,114,217,71,230,75,246,196,216,211,185,24,220,163,57,32,182,254,190,
180,1,245,120,32,242,14,69,120,55,199,185,245,43,221,103,76,210,237,173,110,165,
181,134,19,59,121,81,51,41,118,36,12,224,117,1,127,90,179,167,120,235,91,209,
252,69,167,124,56,240,190,153,97,61,197,148,11,12,183,23,178,62,211,40,143,124,
132,237,232,1,200,239,205,90,209,62,48,234,242,120,159,90,209,117,173,59,78,7,
76,182,185,149,238,44,157,202,6,132,18,115,184,242,9,24,236,114,69,107,70,175,
178,154,157,174,38,174,121,102,139,5,205,221,139,120,127,87,177,189,75,41,88,
189,173,209,182,114,108,166,63,197,211,253,91,112,24,125,8,228,87,81,226,235,11,
223,13,106,82,201,103,105,113,115,174,92,218,67,15,157,111,11,186,217,70,33,84,
109,172,6,12,141,130,50,62,234,251,158,58,223,14,124,93,214,117,79,1,120,147,
196,215,250,126,159,4,122,104,68,182,88,195,226,89,91,179,101,186,114,157,61,
107,42,127,142,218,205,167,130,172,245,123,141,38,192,222,95,93,75,29,188,106,
92,32,138,48,187,152,243,146,119,54,6,15,99,93,47,28,220,175,109,59,11,148,243,
143,11,71,173,232,94,41,211,53,40,116,205,65,90,11,133,45,254,140,227,42,78,24,
30,58,21,38,190,192,28,129,94,31,225,175,140,218,198,189,172,218,89,153,124,54,
130,67,190,84,219,114,142,16,13,206,20,176,219,184,40,56,231,4,138,167,109,241,
223,90,213,91,84,158,206,15,15,88,218,218,33,146,56,245,27,135,18,206,188,225,
80,41,249,155,142,152,29,69,99,136,196,123,118,157,173,97,165,99,223,59,87,204,
191,28,52,187,29,51,198,240,253,134,210,43,97,113,104,37,148,68,187,67,62,230,5,
176,59,224,10,245,255,0,133,158,61,187,241,246,133,119,125,121,97,29,172,150,
247,30,78,98,98,81,254,80,120,207,32,140,255,0,42,242,207,143,223,242,60,89,127,
215,130,255,0,232,111,90,229,237,251,97,75,99,210,190,10,255,0,201,49,176,255,0,
174,211,255,0,232,198,162,143,130,191,242,76,108,63,235,180,255,0,250,49,168,
172,107,255,0,22,94,160,182,61,22,138,43,198,47,124,99,226,143,18,252,100,185,
240,150,133,171,141,55,77,180,86,18,205,29,178,74,217,85,5,137,220,63,188,66,
214,5,26,222,42,248,77,63,138,254,32,90,248,146,235,88,141,109,109,218,16,182,
127,103,39,40,135,37,119,110,238,119,118,239,89,62,40,240,142,139,226,47,137,
214,218,245,247,141,180,132,22,243,66,169,167,51,166,237,168,192,236,206,254,
165,179,219,189,115,122,87,196,79,22,106,58,79,141,26,95,16,150,179,210,161,45,
111,122,45,35,14,205,191,106,46,0,192,222,58,245,35,181,93,248,33,224,57,46,244,
104,188,69,113,119,16,134,91,162,77,180,150,81,75,230,170,112,15,152,224,178,
252,217,251,184,233,64,27,87,191,13,166,240,199,140,239,252,89,101,227,107,45,
42,75,217,101,101,58,133,186,62,221,231,115,40,44,224,31,110,248,172,239,15,
124,62,240,172,22,218,221,181,199,143,108,47,181,61,114,63,179,121,208,203,18,
178,150,112,199,11,188,150,44,192,100,113,233,222,178,62,39,180,158,47,248,223,
164,248,114,37,19,197,104,177,163,66,91,10,196,143,49,193,61,178,184,7,233,86,
52,191,24,88,67,227,27,205,50,127,2,120,110,214,93,33,38,184,184,186,182,64,
222,81,133,75,101,78,209,206,224,7,212,208,5,203,31,133,115,94,248,122,235,193,
246,63,16,52,217,172,214,127,180,75,107,5,170,52,129,193,0,151,33,247,96,16,56,
245,197,116,55,63,9,47,228,208,116,141,22,29,83,75,107,61,62,2,161,110,180,165,
152,153,89,153,157,193,44,10,231,35,143,106,242,143,5,248,136,120,87,195,26,159,
136,103,189,187,182,212,117,123,225,111,4,182,208,36,178,16,131,124,135,14,112,
1,50,32,207,53,212,55,143,60,121,167,124,66,208,244,41,47,47,73,187,150,31,54,
219,81,181,183,86,40,237,143,249,101,156,12,103,184,35,20,1,209,232,63,1,237,
244,253,86,243,80,212,53,117,153,230,183,150,24,227,180,181,16,172,70,68,40,88,
13,199,160,39,2,141,11,224,214,181,225,168,38,183,211,124,71,166,60,82,201,188,
155,173,25,38,108,227,29,89,142,62,149,195,107,31,22,252,113,105,175,106,38,242,
91,237,62,197,39,116,134,40,236,163,27,0,98,0,37,212,231,143,214,174,235,191,
18,252,113,105,166,232,114,105,183,58,132,182,215,118,230,234,91,183,211,227,
222,217,118,93,131,10,87,229,11,193,227,59,129,52,1,239,94,31,210,230,210,52,
104,109,46,102,183,154,228,18,101,150,222,217,96,87,98,122,132,94,7,24,31,133,
120,47,199,239,249,30,44,191,235,193,127,244,55,174,199,224,247,140,245,79,24,
234,58,147,94,106,215,215,17,90,68,160,195,61,188,42,164,177,225,131,32,7,35,
105,227,222,184,239,143,223,242,60,89,127,215,130,255,0,232,111,93,184,15,227,
162,101,177,233,95,5,127,228,152,216,127,215,105,255,0,244,99,81,71,193,95,249,
38,54,31,245,218,127,253,24,212,86,53,255,0,139,47,80,91,30,139,92,110,165,240,
183,194,58,174,173,113,170,92,105,178,45,237,193,45,44,144,92,203,22,242,122,
146,21,128,231,189,118,84,86,5,28,124,95,12,60,35,15,135,238,52,56,116,175,46,
194,226,69,150,116,89,156,52,140,191,119,115,103,36,15,76,226,186,13,23,70,177,
240,254,145,111,165,233,176,249,54,118,224,136,227,220,91,0,146,79,39,147,201,
53,161,69,0,113,250,231,195,47,9,120,139,86,125,87,81,210,203,95,72,6,249,162,
158,72,203,96,96,19,180,142,112,49,154,130,223,225,47,131,45,22,237,109,244,167,
140,94,67,228,79,182,230,79,157,50,164,140,238,238,84,103,214,187,122,40,3,141,
151,225,103,131,167,208,237,180,105,116,128,214,118,178,60,176,143,57,247,35,62,
55,97,179,158,112,56,207,97,77,181,248,85,225,11,45,74,61,66,13,54,81,119,26,
20,89,90,234,86,108,21,42,122,177,231,4,243,93,165,20,1,194,201,240,135,193,
211,168,75,139,43,185,227,4,29,146,234,19,186,231,232,94,172,221,124,49,240,181,
220,222,99,90,92,196,54,44,98,56,47,102,137,21,85,66,128,21,88,1,192,29,171,177,
162,128,49,60,55,225,45,19,194,54,146,219,104,150,9,107,28,172,26,76,51,49,114,
58,100,146,77,103,248,151,225,223,135,60,91,168,71,125,171,218,203,44,241,198,
34,86,73,221,6,208,73,232,15,169,53,213,10,13,84,101,40,187,197,216,12,189,3,
195,250,119,134,180,136,244,189,50,54,138,214,54,102,85,103,44,114,196,147,201,
231,169,162,181,104,164,219,110,236,15,255,217};
static Fl_JPEG_Image image_HOG("HOG Logo.jpg", idata_HOG);

Fl_Box *label_other=(Fl_Box *)0;

Fl_Box *opt_Print_NetFrame=(Fl_Box *)0;

Fl_Box *opt_Print_RoughOpening=(Fl_Box *)0;

Fl_Box *img_Print_swing=(Fl_Box *)0;

Fl_Box *opt_Print_Swing=(Fl_Box *)0;

Fl_Double_Window* make_print_dialog() {
  Fl_Double_Window* w;
  { Fl_Double_Window* o = new Fl_Double_Window(655, 800, "Print Preview");
    w = o;
    o->color(FL_BACKGROUND2_COLOR);
    o->align(Fl_Align(FL_ALIGN_CLIP|FL_ALIGN_INSIDE));
    { grp_PrintGroup = new Fl_Group(0, 0, 655, 743);
      { opt_Customer = new Fl_Box(400, 47, 205, 27);
        opt_Customer->labelfont(8);
        opt_Customer->align(Fl_Align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE));
      } // Fl_Box* opt_Customer
      { opt_Job = new Fl_Box(400, 73, 205, 27);
        opt_Job->labelfont(8);
        opt_Job->align(Fl_Align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE));
      } // Fl_Box* opt_Job
      { opt_Date = new Fl_Box(400, 99, 205, 27);
        opt_Date->labelfont(8);
        opt_Date->align(Fl_Align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE));
      } // Fl_Box* opt_Date
      { box_Print_DoorImage = new Fl_Box(470, 163, 130, 251);
        box_Print_DoorImage->box(FL_THIN_UP_FRAME);
        box_Print_DoorImage->labelfont(8);
      } // Fl_Box* box_Print_DoorImage
      { opt_Print_LocationName = new Fl_Box(150, 163, 205, 27);
        opt_Print_LocationName->labelfont(8);
        opt_Print_LocationName->align(Fl_Align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE));
      } // Fl_Box* opt_Print_LocationName
      { opt_Print_DoorSize = new Fl_Box(150, 192, 205, 27);
        opt_Print_DoorSize->labelfont(8);
        opt_Print_DoorSize->align(Fl_Align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE));
      } // Fl_Box* opt_Print_DoorSize
      { opt_Print_DoorMaterial = new Fl_Box(150, 220, 205, 27);
        opt_Print_DoorMaterial->labelfont(8);
        opt_Print_DoorMaterial->align(Fl_Align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE));
      } // Fl_Box* opt_Print_DoorMaterial
      { opt_Print_DoorStyle = new Fl_Box(150, 248, 205, 27);
        opt_Print_DoorStyle->labelfont(8);
        opt_Print_DoorStyle->align(Fl_Align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE));
      } // Fl_Box* opt_Print_DoorStyle
      { opt_Print_DoorSwing = new Fl_Box(150, 276, 205, 27);
        opt_Print_DoorSwing->labelfont(8);
        opt_Print_DoorSwing->align(Fl_Align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE));
      } // Fl_Box* opt_Print_DoorSwing
      { opt_Print_DoorDesign = new Fl_Box(150, 304, 205, 27);
        opt_Print_DoorDesign->labelfont(8);
        opt_Print_DoorDesign->align(Fl_Align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE));
      } // Fl_Box* opt_Print_DoorDesign
      { opt_Print_JambSize = new Fl_Box(150, 360, 205, 27);
        opt_Print_JambSize->labelfont(8);
        opt_Print_JambSize->align(Fl_Align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE));
      } // Fl_Box* opt_Print_JambSize
      { opt_Print_JambMaterial = new Fl_Box(150, 332, 205, 27);
        opt_Print_JambMaterial->labelfont(8);
        opt_Print_JambMaterial->align(Fl_Align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE));
      } // Fl_Box* opt_Print_JambMaterial
      { opt_Print_Sill = new Fl_Box(150, 444, 205, 27);
        opt_Print_Sill->labelfont(8);
        opt_Print_Sill->align(Fl_Align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE));
      } // Fl_Box* opt_Print_Sill
      { opt_Print_GlassStyle = new Fl_Box(150, 472, 205, 27);
        opt_Print_GlassStyle->labelfont(8);
        opt_Print_GlassStyle->align(Fl_Align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE));
      } // Fl_Box* opt_Print_GlassStyle
      { opt_Print_HingeColor = new Fl_Box(150, 500, 205, 27);
        opt_Print_HingeColor->labelfont(8);
        opt_Print_HingeColor->align(Fl_Align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE));
      } // Fl_Box* opt_Print_HingeColor
      { opt_Print_Price = new Fl_Box(150, 696, 205, 27);
        opt_Print_Price->labelfont(8);
        opt_Print_Price->align(Fl_Align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE));
      } // Fl_Box* opt_Print_Price
      { opt_Print_Notes = new Fl_Box(370, 549, 230, 175);
        opt_Print_Notes->box(FL_EMBOSSED_FRAME);
        opt_Print_Notes->labelfont(8);
        opt_Print_Notes->align(Fl_Align(133|FL_ALIGN_INSIDE));
      } // Fl_Box* opt_Print_Notes
      { opt_CompanyInfo = new Fl_Box(55, 46, 135, 80, "House of Glass\n167 E. 800 S.\nEphraim, UT 84627\n(435) 283-4982\n(435) 283-4\
402 Fax");
        opt_CompanyInfo->labelfont(8);
        opt_CompanyInfo->align(Fl_Align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE));
      } // Fl_Box* opt_CompanyInfo
      { Fl_Box* o = new Fl_Box(195, 46, 100, 80);
        o->image(image_HOG);
        o->labelfont(8);
      } // Fl_Box* o
      { Fl_Box* o = new Fl_Box(315, 47, 75, 27, "Customer:");
        o->labelfont(8);
        o->align(Fl_Align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE));
      } // Fl_Box* o
      { Fl_Box* o = new Fl_Box(315, 73, 75, 27, "Job:");
        o->labelfont(8);
        o->align(Fl_Align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE));
      } // Fl_Box* o
      { Fl_Box* o = new Fl_Box(315, 99, 75, 27, "Date:");
        o->labelfont(8);
        o->align(Fl_Align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE));
      } // Fl_Box* o
      { Fl_Box* o = new Fl_Box(35, 145, 590, 2);
        o->box(FL_FLAT_BOX);
        o->color((Fl_Color)41);
        o->labelfont(8);
      } // Fl_Box* o
      { Fl_Box* o = new Fl_Box(50, 163, 100, 27, "Location/Name:");
        o->labelfont(8);
        o->align(Fl_Align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE));
      } // Fl_Box* o
      { Fl_Box* o = new Fl_Box(50, 192, 100, 27, "Door Size:");
        o->labelfont(8);
        o->align(Fl_Align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE));
      } // Fl_Box* o
      { Fl_Box* o = new Fl_Box(50, 220, 100, 27, "Door Material:");
        o->labelfont(8);
        o->align(Fl_Align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE));
      } // Fl_Box* o
      { Fl_Box* o = new Fl_Box(50, 248, 100, 27, "Door Style/#:");
        o->labelfont(8);
        o->align(Fl_Align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE));
      } // Fl_Box* o
      { Fl_Box* o = new Fl_Box(50, 276, 100, 27, "Door Swing:");
        o->labelfont(8);
        o->align(Fl_Align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE));
      } // Fl_Box* o
      { Fl_Box* o = new Fl_Box(50, 360, 100, 27, "Jamb Size:");
        o->labelfont(8);
        o->align(Fl_Align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE));
      } // Fl_Box* o
      { Fl_Box* o = new Fl_Box(50, 332, 100, 27, "Jamb Material:");
        o->labelfont(8);
        o->align(Fl_Align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE));
      } // Fl_Box* o
      { Fl_Box* o = new Fl_Box(50, 444, 100, 27, "Sill:");
        o->labelfont(8);
        o->align(Fl_Align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE));
      } // Fl_Box* o
      { Fl_Box* o = new Fl_Box(50, 472, 100, 27, "Glass Style/#:");
        o->labelfont(8);
        o->align(Fl_Align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE));
      } // Fl_Box* o
      { Fl_Box* o = new Fl_Box(50, 500, 100, 27, "Hinge Color:");
        o->labelfont(8);
        o->align(Fl_Align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE));
      } // Fl_Box* o
      { Fl_Box* o = new Fl_Box(50, 696, 100, 27, "Price:");
        o->labelfont(8);
        o->align(Fl_Align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE));
      } // Fl_Box* o
      { Fl_Box* o = new Fl_Box(370, 530, 100, 18, "Notes:");
        o->labelfont(8);
        o->align(Fl_Align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE));
      } // Fl_Box* o
      { Fl_Box* o = new Fl_Box(50, 535, 100, 27, "Other Options");
        o->labelfont(10);
        o->align(Fl_Align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE));
      } // Fl_Box* o
      { Fl_Box* o = new Fl_Box(50, 304, 100, 27, "Door Design:");
        o->labelfont(8);
        o->align(Fl_Align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE));
      } // Fl_Box* o
      { label_other = new Fl_Box(55, 560, 85, 20);
        label_other->labelfont(8);
        label_other->align(Fl_Align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE));
      } // Fl_Box* label_other
      { opt_Print_NetFrame = new Fl_Box(150, 388, 205, 27);
        opt_Print_NetFrame->labelfont(8);
        opt_Print_NetFrame->align(Fl_Align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE));
      } // Fl_Box* opt_Print_NetFrame
      { Fl_Box* o = new Fl_Box(50, 388, 100, 27, "Net Frame Size:");
        o->labelfont(8);
        o->align(Fl_Align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE));
      } // Fl_Box* o
      { opt_Print_RoughOpening = new Fl_Box(150, 416, 205, 27);
        opt_Print_RoughOpening->labelfont(8);
        opt_Print_RoughOpening->align(Fl_Align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE));
      } // Fl_Box* opt_Print_RoughOpening
      { Fl_Box* o = new Fl_Box(50, 416, 100, 27, "Rough Opening:");
        o->labelfont(8);
        o->align(Fl_Align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE));
      } // Fl_Box* o
      { img_Print_swing = new Fl_Box(370, 240, 75, 175);
      } // Fl_Box* img_Print_swing
      { Fl_Box* o = new Fl_Box(370, 213, 75, 27, "Swing");
        o->labelfont(10);
        o->align(Fl_Align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE));
      } // Fl_Box* o
      { opt_Print_Swing = new Fl_Box(370, 418, 205, 27);
        opt_Print_Swing->labelfont(8);
        opt_Print_Swing->align(Fl_Align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE));
      } // Fl_Box* opt_Print_Swing
      grp_PrintGroup->end();
    } // Fl_Group* grp_PrintGroup
    { Fl_Group* o = new Fl_Group(0, 743, 655, 57);
      o->box(FL_FLAT_BOX);
      o->color((Fl_Color)23);
      { Fl_Button* o = new Fl_Button(425, 758, 100, 27, "Print");
        o->down_box(FL_DOWN_BOX);
        o->callback((Fl_Callback*)cb_Preview_PrintClicked);
        o->align(Fl_Align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE));
      } // Fl_Button* o
      { Fl_Button* o = new Fl_Button(535, 758, 100, 27, "Cancel");
        o->down_box(FL_DOWN_BOX);
        o->callback((Fl_Callback*)cb_Preview_CancelClicked);
      } // Fl_Button* o
      { Fl_Button* o = new Fl_Button(315, 758, 100, 27, "Make PDF");
        o->down_box(FL_DOWN_BOX);
        o->callback((Fl_Callback*)cb_Preview_MakePDFClicked);
        o->align(Fl_Align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE));
      } // Fl_Button* o
      o->end();
    } // Fl_Group* o
    o->end();
  } // Fl_Double_Window* o
  return w;
}
